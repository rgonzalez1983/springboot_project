package com.example.demo.enumerators;

public enum StaticValues {
    MSG_CRUD_CREATE("CREATE"),
    MSG_CRUD_UPDATE("UPDATE"),
    MSG_CRUD_GET("GET"),
    MSG_CRUD_READ("READ"),
    MSG_CRUD_DELETE("DELETE"),
    MSG_EMPTY_DATA("PARAMETROS VACIOS"),
    MSG_PERSON_GENDER_ERROR("NO SE PUDO CREAR LA PERSONA: VALOR DEL SEXO EXCEDE LA LONGITUD PERMITIDA"),
    MSG_PERSON_CI_ERROR("NO SE PUDO CREAR LA PERSONA: VALOR DEL CI CON LONGITUD ERRONEA"),
    MSG_PERSON_CI_NUMBER_ERROR("NO SE PUDO CREAR LA PERSONA: VALOR DEL CI CON ERRORES, DEBE CONTENER SOLO DIGITOS"),
    MSG_DELETE_COUNTRY_OK("PAIS BORRADO CORRECTAMENTE"),
    MSG_DELETE_COUNTRY_ERROR_DEPENDENCY("PAIS IMPOSIBLE DE ELIMINAR, EXISTE DEPENDENCIA CON OTRA(S) ENTIDAD(ES)"),
    MSG_DELETE_COUNTRY_ERROR_NOT_FOUND("IMPOSIBLE DE ELIMINAR: NO EXISTE PAIS PARA EL ID PROPORCIONADO"),
    MSG_CREATE_COUNTRY_OK("PAIS INSERTADO CORRECTAMENTE"),
    MSG_CREATE_COUNTRY_ERROR_EXISTS("NO SE PUDO CREAR EL PAIS: VALOR EXISTENTE"),
    MSG_UPDATE_COUNTRY_OK("PAIS EDITADO CORRECTAMENTE"),
    MSG_UPDATE_COUNTRY_ERROR_NOT_FOUND("IMPOSIBLE DE EDITAR: NO EXISTE PAIS PARA EL ID PROPORCIONADO"),
    MSG_UPDATE_COUNTRY_ERROR_EXISTS("NO SE PUDO EDITAR EL PAIS: VALOR YA EXISTENTE"),
    MSG_GET_COUNTRY_OK("OBTENIENDO PAIS..."),
    MSG_GET_COUNTRY_ERROR_NOT_FOUND("IMPOSIBLE OBTENER: NO EXISTE PAIS PARA EL ID PROPORCIONADO"),
    MSG_READ_COUNTRY_OK("LISTANDO PAISES..."),
    MSG_DELETE_CITY_OK("CIUDAD BORRADA CORRECTAMENTE"),
    MSG_DELETE_CITY_ERROR_DEPENDENCY("CIUDAD IMPOSIBLE DE ELIMINAR, EXISTE DEPENDENCIA CON OTRA(S) ENTIDAD(ES)"),
    MSG_DELETE_CITY_ERROR_NOT_FOUND("IMPOSIBLE DE ELIMINAR: NO EXISTE CIUDAD PARA EL ID PROPORCIONADO"),
    MSG_CREATE_CITY_OK("CIUDAD INSERTADA CORRECTAMENTE"),
    MSG_CREATE_CITY_ERROR_EXISTS("NO SE PUDO CREAR LA CIUDAD CON EL PAIS SELECCIONADO: VALOR EXISTENTE"),
    MSG_UPDATE_CITY_OK("CIUDAD EDITADA CORRECTAMENTE"),
    MSG_UPDATE_CITY_ERROR_NOT_FOUND("IMPOSIBLE DE EDITAR: NO EXISTE CIUDAD PARA EL ID PROPORCIONADO"),
    MSG_UPDATE_CITY_ERROR_EXISTS("NO SE PUDO EDITAR LA CIUDAD: VALOR YA EXISTENTE"),
    MSG_GET_CITY_OK("OBTENIENDO CIUDAD..."),
    MSG_GET_CITY_ERROR_NOT_FOUND("IMPOSIBLE OBTENER: NO EXISTE CIUDAD PARA EL ID PROPORCIONADO"),
    MSG_READ_CITY_OK("LISTANDO CIUDADES..."),
    MSG_DELETE_PERSON_OK("PERSONA BORRADA CORRECTAMENTE"),
    MSG_DELETE_PERSON_ERROR_DEPENDENCY("PERSONA IMPOSIBLE DE ELIMINAR, EXISTE DEPENDENCIA CON OTRA(S) ENTIDAD(ES)"),
    MSG_DELETE_PERSON_ERROR_NOT_FOUND("IMPOSIBLE DE ELIMINAR: NO EXISTE PERSONA PARA EL ID PROPORCIONADO"),
    MSG_CREATE_PERSON_OK("PERSONA INSERTADA CORRECTAMENTE"),
    MSG_CREATE_PERSON_ERROR_EXISTS("NO SE PUDO CREAR LA PERSONA CON EL CI PROPORCIONADO: VALOR EXISTENTE"),
    MSG_UPDATE_PERSON_OK("PERSONA EDITADA CORRECTAMENTE"),
    MSG_UPDATE_PERSON_ERROR_NOT_FOUND("IMPOSIBLE DE EDITAR: NO EXISTE PERSONA PARA EL ID PROPORCIONADO"),
    MSG_UPDATE_PERSON_ERROR_EXISTS("NO SE PUDO EDITAR LA PERSONA: VALOR YA EXISTENTE"),
    MSG_GET_PERSON_OK("OBTENIENDO PERSONA..."),
    MSG_GET_PERSON_ERROR_NOT_FOUND("IMPOSIBLE OBTENER: NO EXISTE PERSONA PARA EL ID PROPORCIONADO"),
    MSG_READ_PERSON_OK("LISTANDO PERSONAS..."),
    JSON_TYPE_MAP("MAP"),
    JSON_TYPE_OBJECT("JSON");


    /**
     * Valor ENUM.
     */
    private final String text;

    /**
     * Constructor.
     *
     * @param text
     */
    private StaticValues(final String text) {
        this.text = text;
    }

    /**
     * @see Enum#toString()
     */
    @Override
    public String toString() {
        return this.text;
    }
}
